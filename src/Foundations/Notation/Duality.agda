{-# OPTIONS --safe #-}
module Foundations.Notation.Duality where

open import Foundations.Prim.Type
open import Agda.Builtin.Unit

private variable
  โแต โแต โ : Level
  A : ๐ฐ โแต

module _
  {โแต โแต} {A : ๐ฐ โแต} {B : ๐ฐ โแต} {โ โโฒ : Level}
  (I : A โ B โ ๐ฐ โ) (O : B โ A โ ๐ฐ โโฒ) where

  Duality : ๐ฐ (โแต โ โแต โ โ โ โโฒ)
  Duality = {x : A} {y : B} โ I x y โ O y x

  record Dual : ๐ฐ (โแต โ โแต โ โ โ โโฒ) where
    no-eta-equality
    infixl 60 _แตแต
    field _แตแต : Duality

    -- TODO split this out?
    -- TODO additive notation
    infix 90 _โปยน
    _โปยน = _แตแต

open Dual โฆ ... โฆ public


-- homogeneous duality is symmetry
Sym : (A โ A โ ๐ฐ โ) โ ๐ฐ _
Sym R = Dual R R

sym : {โแต โ : Level} {A : ๐ฐ โแต} {R : A โ A โ ๐ฐ โ} โฆ r : Sym R โฆ
    โ {x y : A} โ R x y โ R y x
sym = _แตแต


-- unindexed duality is having a chosen automorphism
record Has-unary-op {โแต} (A : ๐ฐ โแต) : ๐ฐ โแต where
  no-eta-equality
  field minv : A โ A
open Has-unary-op โฆ ... โฆ public


instance
  Has-unary-opโSym
    : โฆ Has-unary-op A โฆ
    โ Sym {A = โค} (ฮป _ _ โ A)
  Has-unary-opโSym ._แตแต = minv
  {-# INCOHERENT Has-unary-opโSym #-}
