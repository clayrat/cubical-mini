{-# OPTIONS --safe #-}
open import Order.Base

module Order.Reasoning {o โ} (P : Poset o โ) where

open import Cat.Prelude

open Poset P public

private variable a b c d : โ P โ

infixr 2 _โคโจ_โฉ_
_โคโจ_โฉ_ : (a : โ P โ) โ a โค b โ b โค c โ a โค c
f โคโจ p โฉ q = p โ q

=โโค : โ {x y} โ x ๏ผ y โ x โค y
=โโค = =โ~

=โโฅ : โ {x y} โ x ๏ผ y โ y โค x
=โโฅ = =โ~โป

instance
  โ-Poset-Ob : โ-notation Ob Ob (๐ฐ โ)
  โ-Poset-Ob ._โ_ = Iso _โค_ _โค_
  {-# OVERLAPPING โ-Poset-Ob #-}
